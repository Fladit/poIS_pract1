#lang racket

(define (func a b)
  (define c (read))
(display "a + b + c = ")
  (display (+ a b c))
  )

(define (cube_volume)
  (display "Вычисление объёма куба.")
  (newline)
  (display "Введите длину ребра (см) и нажмите клавишу <Enter>, a = ")
  (define len (read))
  (display "Объём куба: ")
  (display (* len len len))
  (display " куб.см.")
  (newline)
  (newline)
  )

(define (cylinder_volume)
(display "Вычисление объёма цилиндра.")
  (newline)
 (display "Введите исходные данные:")
  (newline)
  (display "Радиус основания (см) = ")
  (define radius (read))
  (display "Высота цилиндра (см) = ")
  (define height (read))
  (display "Объём цилиндра = ")
  (display (* 3.14 radius radius height))
  (newline)
  (newline)

  )

  
(define (cost_of_travel)
  (display "Вычисление стоимости поездки на дачу и обратно.")
  (newline)
  (display "Введите расстояние до дачи (км) ")
  (define distance (read))
  (display "Введите количество бензина, которое потребляет автомобиль на 100 км пробега ")
  (define fuel_consumption (read))
  (display "Введите цену одного литра бензина (в рублях)")
  (define fuel_price (read))
  (display "Итоговая стоимость поездки до дачи: ")
  (display (* distance (/ fuel_consumption 100.0) fuel_price))
  (display " рублей.")
  (newline)
  (newline))



(display "Введите 1 для подсчёта объёма куба, 2 для подсчёта объёма цилиндра, 3 для подсчёта стоимости поездки на дачу и обратно")
(newline)
(define answer (read))
(if (equal? answer 1) (cube_volume)
(if (equal? answer 2) (cylinder_volume)
(if (equal? answer 3) (cost_of_travel) (display "Введено неверное значение"))))
